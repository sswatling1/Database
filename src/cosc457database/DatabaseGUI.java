/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cosc457database;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Scott
 */
public class DatabaseGUI extends javax.swing.JFrame {

    /**
     * Creates new form DstabaseGUI
     */


    
    public DatabaseGUI() {
        initComponents();
        setTitle("Database");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel17 = new javax.swing.JPanel();
        relationshipsPane = new javax.swing.JTabbedPane();
        customerPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        name = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        addStore = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeTable = new javax.swing.JTable();
        populateStoreList = new javax.swing.JButton();
        idStore = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        deleteStore = new javax.swing.JButton();
        updateStore = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        staffSSN = new javax.swing.JTextField();
        staffFName = new javax.swing.JTextField();
        staffMName = new javax.swing.JTextField();
        staffLName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addStaff = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        populateStaffList = new javax.swing.JButton();
        deleteStaff = new javax.swing.JButton();
        idStaff = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        updateStaff = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        itemName = new javax.swing.JTextField();
        itemPrice = new javax.swing.JTextField();
        addItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ItemTable = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        populateItemList = new javax.swing.JButton();
        idItem = new javax.swing.JTextField();
        deleteStaff1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        updateItem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        orderQuantity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addOrder = new javax.swing.JButton();
        orderItem = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        populateOrderTable = new javax.swing.JButton();
        idOrder = new javax.swing.JTextField();
        deleteOrder = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        updateOrder = new javax.swing.JButton();
        orderTotal = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        shipping_Address = new javax.swing.JLabel();
        billing_Address = new javax.swing.JLabel();
        first_Name = new javax.swing.JLabel();
        shipAddr = new javax.swing.JTextField();
        fName = new javax.swing.JTextField();
        middle_name = new javax.swing.JLabel();
        lName = new javax.swing.JTextField();
        billAddr = new javax.swing.JTextField();
        addCustomer = new javax.swing.JButton();
        mName = new javax.swing.JTextField();
        last_Name = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        populateCustomerList = new javax.swing.JButton();
        idCustomer = new javax.swing.JTextField();
        deleteCustomer = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        updateCustomer = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        idPOOrder = new javax.swing.JTextField();
        idPOCustomer = new javax.swing.JTextField();
        idOrderLabel = new javax.swing.JLabel();
        idCustomerLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        placeOrderTable = new javax.swing.JTable();
        addPlaceOrder = new javax.swing.JButton();
        populatePlaceOrderTable = new javax.swing.JButton();
        idPlaceOrder = new javax.swing.JTextField();
        deletePlaceOrder = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        updatePlaceOrder = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        idHasStore = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        idHasItem = new javax.swing.JTextField();
        HasQuantity = new javax.swing.JTextField();
        addHasInventory = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        hasInventoryTable = new javax.swing.JTable();
        populateHasInventoryTable = new javax.swing.JButton();
        deleteHasInventory = new javax.swing.JButton();
        idHasInventory = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        updateHasInventory = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        idFulStore = new javax.swing.JTextField();
        idFulOrder = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        fulfillTable = new javax.swing.JTable();
        addFulfill = new javax.swing.JButton();
        populateFulfillTable = new javax.swing.JButton();
        deleteFulfill = new javax.swing.JButton();
        idFulfill = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        updateFulfill = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        populateEmployTable = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        employTable = new javax.swing.JTable();
        addEmploy = new javax.swing.JButton();
        idEmpStaff = new javax.swing.JTextField();
        idEmpStore = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        deleteEmploy = new javax.swing.JButton();
        idEmploy = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        updateEmploy = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        populateManageTable = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        manageTable = new javax.swing.JTable();
        addManage = new javax.swing.JButton();
        idManStaff = new javax.swing.JTextField();
        idManStore = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        idManage = new javax.swing.JTextField();
        deleteManage = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        updateManage = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        getStoreStaffStoreID = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        getStaff = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        getStoreStaffTable = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        getStoreInventoryStoreID = new javax.swing.JTextField();
        getInventory = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        getStoreInventoryTable = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        getManager = new javax.swing.JButton();
        getStoreManagerID = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        getStoreManagerTable = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        getStoreOrders = new javax.swing.JTextField();
        getOrders = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        getOrderTable = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel20 = new javax.swing.JPanel();
        customerOrders = new javax.swing.JTextField();
        getCustomerOrders = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        getCustomerOrdersTable = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel22 = new javax.swing.JPanel();
        getOrdersItem = new javax.swing.JTextField();
        getOrderItem = new javax.swing.JButton();
        ItemTable2 = new javax.swing.JScrollPane();
        getOrderItemTable = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        relationshipsPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        addStore.setText("Add Store");
        addStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStoreActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Address");

        storeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idStore", "Store Name", "Store Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeTable);

        populateStoreList.setText("Populate Table");
        populateStoreList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateStoreListActionPerformed(evt);
            }
        });

        jLabel20.setText("idStore");

        deleteStore.setText("Delete Store");
        deleteStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStoreActionPerformed(evt);
            }
        });

        updateStore.setText("Update Store");
        updateStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idStore)
                            .addComponent(deleteStore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateStoreList, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addStore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteStore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateStore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(populateStoreList)
                .addContainerGap())
        );

        customerPane.addTab("Store", jPanel3);

        staffSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSSNActionPerformed(evt);
            }
        });

        jLabel5.setText("SSN");

        jLabel6.setText("First Name");

        jLabel7.setText("Middle Name");

        jLabel8.setText("Last Name");

        addStaff.setText("Add Staff");
        addStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaffActionPerformed(evt);
            }
        });

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idStaff", "SSN", "First Name", "Middle Name", "Lase Name"
            }
        ));
        jScrollPane2.setViewportView(staffTable);

        populateStaffList.setText("Populate Table");
        populateStaffList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateStaffListActionPerformed(evt);
            }
        });

        deleteStaff.setText("Delete Staff");
        deleteStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStaffActionPerformed(evt);
            }
        });

        jLabel21.setText("idStaff");

        updateStaff.setText("Update Staff");
        updateStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStaffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staffSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffFName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffMName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffLName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idStaff)
                            .addComponent(deleteStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateStaffList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addStaff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteStaff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateStaff)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateStaffList)
                .addContainerGap())
        );

        customerPane.addTab("Staff", jPanel4);

        itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameActionPerformed(evt);
            }
        });

        addItem.setText("Add Item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jLabel4.setText("Price");

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idItem", "Item Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ItemTable.setViewportView(itemTable);

        populateItemList.setText("Populate Table");
        populateItemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateItemListActionPerformed(evt);
            }
        });

        deleteStaff1.setText("Delete Item");
        deleteStaff1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStaff1ActionPerformed(evt);
            }
        });

        jLabel22.setText("idItem");

        updateItem.setText("Update Item");
        updateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idItem)
                            .addComponent(deleteStaff1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateItemList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ItemTable, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemTable, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteStaff1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateItem)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateItemList)
                .addContainerGap())
        );

        customerPane.addTab("Item", jPanel5);

        jLabel11.setText("Quantity");

        addOrder.setText("Add Order");
        addOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderActionPerformed(evt);
            }
        });

        orderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderItemActionPerformed(evt);
            }
        });

        jLabel12.setText("Item ID");

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idOrder", "idOrderItem", "Total", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(orderTable);

        populateOrderTable.setText("Populate Table");
        populateOrderTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateOrderTableActionPerformed(evt);
            }
        });

        deleteOrder.setText("Delete Order");
        deleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderActionPerformed(evt);
            }
        });

        jLabel23.setText("idOrder");

        updateOrder.setText("Update Order");
        updateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderActionPerformed(evt);
            }
        });

        orderTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderTotalActionPerformed(evt);
            }
        });

        jLabel30.setText("Total");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderTotal)
                            .addComponent(orderItem, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(orderQuantity)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(idOrder)
                            .addComponent(updateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateOrderTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateOrder)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateOrderTable)
                .addContainerGap())
        );

        customerPane.addTab("Order", jPanel2);

        shipping_Address.setText("Shipping Address");

        billing_Address.setText("Billing Address");

        first_Name.setText("First Name");

        middle_name.setText("Middle Name");

        lName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNameActionPerformed(evt);
            }
        });

        addCustomer.setText("Add Customer");
        addCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerActionPerformed(evt);
            }
        });

        last_Name.setText("Lase Name");

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCustomer", "First Name", "Middle Name", "Last Name", "Billing Address", "Shipping Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(customerTable);

        populateCustomerList.setText("Populate Table");
        populateCustomerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateCustomerListActionPerformed(evt);
            }
        });

        deleteCustomer.setText("Delete Customer");
        deleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerActionPerformed(evt);
            }
        });

        jLabel24.setText("idCustomer");

        updateCustomer.setText("Update Customer");
        updateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(first_Name)
                            .addComponent(middle_name)
                            .addComponent(last_Name)
                            .addComponent(billing_Address)
                            .addComponent(shipping_Address))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fName)
                            .addComponent(mName)
                            .addComponent(lName)
                            .addComponent(shipAddr)
                            .addComponent(billAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idCustomer)
                            .addComponent(deleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateCustomerList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(first_Name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(middle_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(last_Name)
                            .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shipAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shipping_Address))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(billAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billing_Address))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateCustomer)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateCustomerList)
                .addContainerGap())
        );

        customerPane.addTab("Customer", jPanel1);

        relationshipsPane.addTab("Entities", customerPane);

        idPOOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPOOrderActionPerformed(evt);
            }
        });

        idPOCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPOCustomerActionPerformed(evt);
            }
        });

        idOrderLabel.setText("idOrder");

        idCustomerLabel.setText("idCustomer");

        placeOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idPlaceOrder", "idOrder", "idCustomer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(placeOrderTable);

        addPlaceOrder.setText("Add");
        addPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaceOrderActionPerformed(evt);
            }
        });

        populatePlaceOrderTable.setText("Populate Table");
        populatePlaceOrderTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populatePlaceOrderTableActionPerformed(evt);
            }
        });

        deletePlaceOrder.setText("Delete PlaceOrder");
        deletePlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlaceOrderActionPerformed(evt);
            }
        });

        jLabel25.setText("idPlaceOrder");

        updatePlaceOrder.setText("Update PlaceOrder");
        updatePlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlaceOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idOrderLabel)
                            .addComponent(idCustomerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idPOCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idPOOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idPlaceOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(deletePlaceOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(updatePlaceOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populatePlaceOrderTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPOOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idOrderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPOCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idCustomerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlaceOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePlaceOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatePlaceOrder)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populatePlaceOrderTable)
                .addContainerGap())
        );

        jTabbedPane2.addTab("PlaceOrder", jPanel8);

        jLabel9.setText("Store ID");

        jLabel10.setText("Item ID");

        jLabel13.setText("Quantity");

        addHasInventory.setText("Add");
        addHasInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHasInventoryActionPerformed(evt);
            }
        });

        hasInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idHasInventory", "Store ID", "Item ID", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(hasInventoryTable);

        populateHasInventoryTable.setText("Populate Table");
        populateHasInventoryTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateHasInventoryTableActionPerformed(evt);
            }
        });

        deleteHasInventory.setText("Delete HasInventory");
        deleteHasInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHasInventoryActionPerformed(evt);
            }
        });

        jLabel26.setText("idHasInventory");

        updateHasInventory.setText("Update HasInventory");
        updateHasInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHasInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addHasInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idHasStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idHasItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HasQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idHasInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(deleteHasInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(updateHasInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateHasInventoryTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idHasStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(idHasItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(HasQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addHasInventory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idHasInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteHasInventory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateHasInventory)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateHasInventoryTable)
                .addContainerGap())
        );

        jTabbedPane2.addTab("HasInventory", jPanel6);

        idFulStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFulStoreActionPerformed(evt);
            }
        });

        jLabel14.setText("Store ID");

        jLabel15.setText("Order ID");

        fulfillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idFulfill", "Store ID", "Order ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(fulfillTable);

        addFulfill.setText("Add");
        addFulfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFulfillActionPerformed(evt);
            }
        });

        populateFulfillTable.setText("Populate Table");
        populateFulfillTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateFulfillTableActionPerformed(evt);
            }
        });

        deleteFulfill.setText("Delete Fulfill");
        deleteFulfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFulfillActionPerformed(evt);
            }
        });

        idFulfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFulfillActionPerformed(evt);
            }
        });

        jLabel27.setText("idFulfill");

        updateFulfill.setText("Update Fulfill");
        updateFulfill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFulfillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idFulStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFulfill, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idFulOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idFulfill, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(deleteFulfill, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(updateFulfill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateFulfillTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idFulStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idFulOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFulfill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idFulfill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteFulfill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateFulfill)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateFulfillTable)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Fulfill", jPanel9);

        populateEmployTable.setText("Populate Table");
        populateEmployTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateEmployTableActionPerformed(evt);
            }
        });

        employTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idEmploy", "Store ID", "Staff ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(employTable);

        addEmploy.setText("Add");
        addEmploy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployActionPerformed(evt);
            }
        });

        idEmpStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEmpStoreActionPerformed(evt);
            }
        });

        jLabel16.setText("Staff ID");

        jLabel17.setText("Store ID");

        deleteEmploy.setText("Delete Employ");
        deleteEmploy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployActionPerformed(evt);
            }
        });

        idEmploy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEmployActionPerformed(evt);
            }
        });

        jLabel28.setText("idEmploy");

        updateEmploy.setText("Update Employ");
        updateEmploy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmployActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idEmpStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addEmploy, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idEmpStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idEmploy, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(deleteEmploy, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(updateEmploy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateEmployTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idEmpStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idEmpStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addEmploy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idEmploy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEmploy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateEmploy)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateEmployTable)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Employ", jPanel10);

        populateManageTable.setText("Populate Table");
        populateManageTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateManageTableActionPerformed(evt);
            }
        });

        manageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idManage", "Store ID", "Staff ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane9.setViewportView(manageTable);

        addManage.setText("Add");
        addManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addManageActionPerformed(evt);
            }
        });

        idManStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idManStoreActionPerformed(evt);
            }
        });

        jLabel18.setText("Staff ID");

        jLabel19.setText("Store ID");

        idManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idManageActionPerformed(evt);
            }
        });

        deleteManage.setText("Delete Manage");
        deleteManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteManageActionPerformed(evt);
            }
        });

        jLabel29.setText("idManage");

        updateManage.setText("Update Manage");
        updateManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateManageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idManStore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addManage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idManStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idManage, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(deleteManage, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(updateManage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(populateManageTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idManStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idManStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addManage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idManage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteManage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateManage)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(populateManageTable)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Manage", jPanel11);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );

        relationshipsPane.addTab("Relationships", jPanel7);

        jLabel31.setText("Store ID");

        getStaff.setText("Get Staff");
        getStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStaffActionPerformed(evt);
            }
        });

        getStoreStaffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idStaff", "SSN", "First Name", "Middle Name", "Lase Name"
            }
        ));
        jScrollPane11.setViewportView(getStoreStaffTable);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(getStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStoreStaffStoreID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getStoreStaffStoreID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStaff)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Staff", jPanel13);

        getInventory.setText("Get Inventory");
        getInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInventoryActionPerformed(evt);
            }
        });

        jLabel32.setText("Store ID");

        getStoreInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idItem", "Name", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane10.setViewportView(getStoreInventoryTable);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(getInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStoreInventoryStoreID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getStoreInventoryStoreID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getInventory)
                        .addGap(0, 244, Short.MAX_VALUE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inventory", jPanel14);

        getManager.setText("Get Manager");
        getManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getManagerActionPerformed(evt);
            }
        });

        jLabel33.setText("Store ID");

        getStoreManagerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idStaff", "SSN", "First Name", "Middle Name", "Lase Name"
            }
        ));
        jScrollPane12.setViewportView(getStoreManagerTable);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(getManager, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStoreManagerID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getStoreManagerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getManager)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manager", jPanel15);

        getOrders.setText("Get Orders");
        getOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOrdersActionPerformed(evt);
            }
        });

        jLabel34.setText("Store ID");

        getOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idOrder", "idOrderItem", "Total", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane13.setViewportView(getOrderTable);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(getOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getStoreOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getStoreOrders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getOrders)
                        .addGap(0, 244, Short.MAX_VALUE))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Orders", jPanel16);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Store", jPanel18);

        getCustomerOrders.setText("Get Orders");
        getCustomerOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCustomerOrdersActionPerformed(evt);
            }
        });

        getCustomerOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idOrder", "idOrderItem", "Total", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane14.setViewportView(getCustomerOrdersTable);

        jLabel35.setText("Customer ID");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(getCustomerOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerOrders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getCustomerOrders)
                        .addGap(0, 244, Short.MAX_VALUE))
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane4.addTab("Orders", jPanel20);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Customer", jPanel19);

        getOrderItem.setText("Get Item");
        getOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOrderItemActionPerformed(evt);
            }
        });

        getOrderItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idItem", "Item Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ItemTable2.setViewportView(getOrderItemTable);

        jLabel37.setText("Order ID");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel22Layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(getOrderItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel22Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(getOrdersItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(ItemTable2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                    .addGap(8, 8, 8)))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel22Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel22Layout.createSequentialGroup()
                            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(getOrdersItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel37))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(getOrderItem)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(ItemTable2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))))
        );

        jTabbedPane5.addTab("Item", jPanel22);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Order", jPanel21);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );

        relationshipsPane.addTab("Queries", jPanel12);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(relationshipsPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(relationshipsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateItemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateItemListActionPerformed
        try {
            showItem();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateItemListActionPerformed

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        try {
            itemQueries.postItem(this.itemName.getText(), Float.parseFloat(this.itemPrice.getText()));
            showItem();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addItemActionPerformed

    private void itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameActionPerformed

    private void populateStaffListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateStaffListActionPerformed
        try {
            showStaff();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateStaffListActionPerformed

    private void addStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaffActionPerformed
        try {
            staffQueries.postStaff(this.staffSSN.getText(), this.staffFName.getText(), this.staffMName.getText(), this.staffLName.getText());
            showStaff();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addStaffActionPerformed

    private void staffSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffSSNActionPerformed

    private void populateStoreListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateStoreListActionPerformed
        try {
            showStore();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateStoreListActionPerformed

    private void addStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStoreActionPerformed
        try {
            storeQueries.postStore(this.name.getText(), this.address.getText());
            showStore();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addStoreActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void idPOOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPOOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPOOrderActionPerformed

    private void idPOCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPOCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPOCustomerActionPerformed

    private void addPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaceOrderActionPerformed
        try {            
            placeOrderQueries.postPlaceOrder(Integer.parseInt(this.idPOOrder.getText()), Integer.parseInt(this.idPOCustomer.getText()));
            showPlaceOrder();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addPlaceOrderActionPerformed

    private void populatePlaceOrderTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populatePlaceOrderTableActionPerformed
        try {
            showPlaceOrder();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populatePlaceOrderTableActionPerformed

    private void addHasInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHasInventoryActionPerformed
        try {            
            hasInventoryQueries.postHasInventory(Integer.parseInt(this.idHasStore.getText()), Integer.parseInt(this.idHasItem.getText()), Integer.parseInt(this.HasQuantity.getText()));
            showHasInventory();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addHasInventoryActionPerformed

    private void populateHasInventoryTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateHasInventoryTableActionPerformed
        try {
            showHasInventory();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateHasInventoryTableActionPerformed

    private void idFulStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFulStoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFulStoreActionPerformed

    private void addFulfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFulfillActionPerformed
        try {            
            fulfillQueries.postFulfill(Integer.parseInt(this.idFulStore.getText()), Integer.parseInt(this.idFulOrder.getText()));
            showFulfill();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addFulfillActionPerformed

    private void populateFulfillTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateFulfillTableActionPerformed
        try {
            showFulfill();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateFulfillTableActionPerformed

    private void populateEmployTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateEmployTableActionPerformed
        try {
            showEmploy();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateEmployTableActionPerformed

    private void addEmployActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployActionPerformed
        try {            
            employQueries.postEmploy(Integer.parseInt(this.idEmpStore.getText()), Integer.parseInt(this.idEmpStaff.getText()));
            showEmploy();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addEmployActionPerformed

    private void idEmpStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEmpStoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEmpStoreActionPerformed

    private void populateManageTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateManageTableActionPerformed
        try {
            showManage();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateManageTableActionPerformed

    private void addManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addManageActionPerformed
        try {            
            manageQueries.postManage(Integer.parseInt(this.idManStore.getText()), Integer.parseInt(this.idManStaff.getText()));
            showManage();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addManageActionPerformed

    private void idManStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idManStoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idManStoreActionPerformed

    private void populateCustomerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateCustomerListActionPerformed
        try {
            showCustomer();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateCustomerListActionPerformed

    private void addCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerActionPerformed
        try {
            customerQueries.postCustomer(this.fName.getText(), this.mName.getText(), this.lName.getText(), this.shipAddr.getText(), this.billAddr.getText());
            showCustomer();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addCustomerActionPerformed

    private void lNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameActionPerformed

    private void deleteStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStoreActionPerformed
        
        try {
            storeQueries.deleteStore(Integer.parseInt(this.idStore.getText()));
            showStore();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_deleteStoreActionPerformed

    private void deleteStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStaffActionPerformed
        try {
            staffQueries.deleteStaff(Integer.parseInt(this.idStaff.getText()));
            showStaff();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteStaffActionPerformed

    private void deleteStaff1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStaff1ActionPerformed
        try {
            itemQueries.deleteItem(Integer.parseInt(this.idItem.getText()));
            showItem();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteStaff1ActionPerformed

    private void populateOrderTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateOrderTableActionPerformed
        try {
            showOrder();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_populateOrderTableActionPerformed

    private void orderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderItemActionPerformed

    private void addOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderActionPerformed
        try {

            float price = itemQueries.getItemPrice(Integer.parseInt(this.orderItem.getText()));

            float total = price * Integer.parseInt(this.orderQuantity.getText());

            orderQueries.postOrder(Integer.parseInt(this.orderItem.getText()), total, Integer.parseInt(this.orderQuantity.getText()));
            showOrder();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addOrderActionPerformed

    private void deleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderActionPerformed
        try {
            orderQueries.deleteOrder(Integer.parseInt(this.idOrder.getText()));
            showOrder();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteOrderActionPerformed

    private void deleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerActionPerformed
        try {
            customerQueries.deleteCustomer(Integer.parseInt(this.idCustomer.getText()));
            showCustomer();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteCustomerActionPerformed

    private void deletePlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlaceOrderActionPerformed
        try {
            placeOrderQueries.deletePlaceOrder(Integer.parseInt(this.idPlaceOrder.getText()));
            showPlaceOrder();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletePlaceOrderActionPerformed

    private void deleteHasInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHasInventoryActionPerformed
        try {
            hasInventoryQueries.deleteHasInventory(Integer.parseInt(this.idHasInventory.getText()));
            showHasInventory();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteHasInventoryActionPerformed

    private void deleteFulfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFulfillActionPerformed
        try {
            fulfillQueries.deleteFulfill(Integer.parseInt(this.idFulfill.getText()));
            showFulfill();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteFulfillActionPerformed

    private void idFulfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFulfillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFulfillActionPerformed

    private void deleteEmployActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployActionPerformed
        try {
            employQueries.deleteEmploy(Integer.parseInt(this.idEmploy.getText()));
            showEmploy();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteEmployActionPerformed

    private void idEmployActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEmployActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEmployActionPerformed

    private void idManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idManageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idManageActionPerformed

    private void deleteManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteManageActionPerformed
        try {
            manageQueries.deleteManage(Integer.parseInt(this.idManage.getText()));
            showManage();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteManageActionPerformed

    private void updateStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStoreActionPerformed
        try {
            storeQueries.updateStore(Integer.parseInt(this.idStore.getText()), this.name.getText(), this.address.getText());
            showStore();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateStoreActionPerformed

    private void updateStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStaffActionPerformed
        try {
            staffQueries.updateStaff(Integer.parseInt(this.idStaff.getText()), Integer.parseInt(this.staffSSN.getText()), this.staffFName.getText(), this.staffMName.getText(), this.staffLName.getText());
            showStaff();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateStaffActionPerformed

    private void updateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemActionPerformed
        try {
            itemQueries.updateItem(Integer.parseInt(this.idItem.getText()), this.itemName.getText(), Float.parseFloat(this.itemPrice.getText()));
            showItem();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateItemActionPerformed

    private void updateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderActionPerformed
        try {
            orderQueries.updateOrder(Integer.parseInt(this.idOrder.getText()), Integer.parseInt(this.orderItem.getText()), Float.parseFloat(this.orderTotal.getText()), Integer.parseInt(this.orderQuantity.getText()));
            showOrder();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateOrderActionPerformed

    private void orderTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTotalActionPerformed

    private void updateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerActionPerformed
        try {
            customerQueries.updateCustomer(Integer.parseInt(this.idCustomer.getText()), this.fName.getText(), this.mName.getText(), this.lName.getText(), this.billAddr.getText(), this.shipAddr.getText());
            showCustomer();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateCustomerActionPerformed

    private void updatePlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlaceOrderActionPerformed
        try {
            placeOrderQueries.updatePlaceOrder(Integer.parseInt(this.idPlaceOrder.getText()), Integer.parseInt(this.idPOOrder.getText()), Integer.parseInt(this.idPOCustomer.getText()));
            showPlaceOrder();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updatePlaceOrderActionPerformed

    private void updateHasInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHasInventoryActionPerformed
        try {
            hasInventoryQueries.updateHasInventory(Integer.parseInt(this.idHasInventory.getText()), Integer.parseInt(this.idHasStore.getText()), Integer.parseInt(this.idHasItem.getText()), Integer.parseInt(this.HasQuantity.getText()));
            showHasInventory();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateHasInventoryActionPerformed

    private void updateFulfillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFulfillActionPerformed
        try {
            fulfillQueries.updateFulfill(Integer.parseInt(this.idFulfill.getText()), Integer.parseInt(this.idFulStore.getText()), Integer.parseInt(this.idFulOrder.getText()));
            showFulfill();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateFulfillActionPerformed

    private void updateEmployActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmployActionPerformed
        try {
            employQueries.updateEmploy(Integer.parseInt(this.idEmploy.getText()), Integer.parseInt(this.idEmpStore.getText()), Integer.parseInt(this.idEmpStaff.getText()));
            showEmploy();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateEmployActionPerformed

    private void updateManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateManageActionPerformed
        try {
            manageQueries.updateManage(Integer.parseInt(this.idManage.getText()), Integer.parseInt(this.idManStore.getText()), Integer.parseInt(this.idManStaff.getText()));
            showManage();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateManageActionPerformed

    private void getStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStaffActionPerformed
        try {
            showStoreStaff(Integer.parseInt(this.getStoreStaffStoreID.getText()));
                    } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getStaffActionPerformed

    private void getInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInventoryActionPerformed
        try {
            showInventory(Integer.parseInt(this.getStoreInventoryStoreID.getText()));
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getInventoryActionPerformed

    private void getManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getManagerActionPerformed
        try {
            showStoreManager(Integer.parseInt(this.getStoreManagerID.getText()));
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getManagerActionPerformed

    private void getOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOrdersActionPerformed
        try {
            showStoreOrders(Integer.parseInt(this.getStoreOrders.getText()));
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getOrdersActionPerformed

    private void getCustomerOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCustomerOrdersActionPerformed
        try {
            showCustomerOrders(Integer.parseInt(this.customerOrders.getText()));
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getCustomerOrdersActionPerformed

    private void getOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOrderItemActionPerformed
        try {
            showOrderItem(Integer.parseInt(this.getOrdersItem.getText()));
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(DatabaseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getOrderItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseGUI().setVisible(true);
            }
        });
    }
    
    public void showStore() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Store> list = storeQueries.storeList();
        
        DefaultTableModel model = (DefaultTableModel)storeTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdStore();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getAddress();
            model.addRow(row);
        }
    }

        
    public void showStaff() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Staff> list = staffQueries.staffList();
        
        DefaultTableModel model = (DefaultTableModel)staffTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[5];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdStaff();
            row[1] = list.get(i).getSSN();
            row[2] = list.get(i).getfName();
            row[3] = list.get(i).getmName();
            row[4] = list.get(i).getlName();
            model.addRow(row);
        }
    }
    
    public void showItem() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Item> list = itemQueries.itemList();
        
        DefaultTableModel model = (DefaultTableModel)itemTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdItem();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getPrice();
            model.addRow(row);
        }
    }
    
    public void showCustomer() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Customer> list = customerQueries.customerList();
        
        DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[6];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdCustomer();
            row[1] = list.get(i).getfName();
            row[2] = list.get(i).getmName();
            row[3] = list.get(i).getlName();
            row[4] = list.get(i).getBillAddr();
            row[5] = list.get(i).getShipAddr();
            model.addRow(row);
        }
    }
    
    public void showOrder() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Order> list = orderQueries.orderList();
        
        DefaultTableModel model = (DefaultTableModel)orderTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdOrder();
            row[1] = list.get(i).getIdOrderItem();
            row[2] = list.get(i).getTotal();
            row[3] = list.get(i).getQty();
            model.addRow(row);
        }
    }
    
    public void showPlaceOrder() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException {
        
        ArrayList<PlaceOrder> list = placeOrderQueries.placeOrderList();
        
        DefaultTableModel model = (DefaultTableModel)placeOrderTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdPlaceOrder();
            row[1] = list.get(i).getIdPOOrder();
            row[2] = list.get(i).getIdPOCustomer();
            model.addRow(row);
        }
    }
    
    public void showHasInventory() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<HasInventory> list = hasInventoryQueries.hasInventoryList();
        
        DefaultTableModel model = (DefaultTableModel)hasInventoryTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdHasInventory();
            row[1] = list.get(i).getIdHasStore();
            row[2] = list.get(i).getIdHasItem();
            row[3] = list.get(i).getQuantity();
            model.addRow(row);
        }
    }
    
    public void showFulfill() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Fulfill> list = fulfillQueries.fulfillList();
        
        DefaultTableModel model = (DefaultTableModel)fulfillTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdFulfill();
            row[1] = list.get(i).getIfFulStore();
            row[2] = list.get(i).getIdFulOrder();
            model.addRow(row);
        }
    }
    
    public void showEmploy() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Employ> list = employQueries.employList();
        
        DefaultTableModel model = (DefaultTableModel)employTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdEmploy();
            row[1] = list.get(i).getIdEmpStore();
            row[2] = list.get(i).getIdEmpStaff();
            model.addRow(row);
        }
    }
    
    public void showManage() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Manage> list = manageQueries.manageList();
        
        DefaultTableModel model = (DefaultTableModel)manageTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdManage();
            row[1] = list.get(i).getIdManStore();
            row[2] = list.get(i).getIdManStaff();
            model.addRow(row);
        }
    }
    
    public void showStoreStaff(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Staff> list = storeQueries.getStoreStaffList(id);
        
        DefaultTableModel model = (DefaultTableModel)getStoreStaffTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[5];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdStaff();
            row[1] = list.get(i).getSSN();
            row[2] = list.get(i).getfName();
            row[3] = list.get(i).getmName();
            row[4] = list.get(i).getlName();
            model.addRow(row);
        }
    }
    
    public void showInventory(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Inventory> list = storeQueries.getStoreInventoryList(id);
        
        DefaultTableModel model = (DefaultTableModel)getStoreInventoryTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdItem();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getPrice();
            row[3] = list.get(i).getQty();
            model.addRow(row);
        }
    }
    
    public void showStoreManager(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException {
        ArrayList<Staff> list = storeQueries.getStoreManagerList(id);
        
        DefaultTableModel model = (DefaultTableModel)getStoreManagerTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[5];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdStaff();
            row[1] = list.get(i).getSSN();
            row[2] = list.get(i).getfName();
            row[3] = list.get(i).getmName();
            row[4] = list.get(i).getlName();
            model.addRow(row);
        }
    }
    
    public void showStoreOrders(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Order> list = storeQueries.getStoreOrderList(id);
        
        DefaultTableModel model = (DefaultTableModel)getOrderTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdOrder();
            row[1] = list.get(i).getIdOrderItem();
            row[2] = list.get(i).getTotal();
            row[3] = list.get(i).getQty();
            model.addRow(row);
        }
    }
    
    public void showCustomerOrders(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Order> list = customerQueries.getCustomerOrderList(id);
        
        DefaultTableModel model = (DefaultTableModel)getCustomerOrdersTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdOrder();
            row[1] = list.get(i).getIdOrderItem();
            row[2] = list.get(i).getTotal();
            row[3] = list.get(i).getQty();
            model.addRow(row);
        }
    }
    
    public void showOrderItem(int id) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException{
        
        ArrayList<Item> list = orderQueries.getOrderItemList(id);
        
        DefaultTableModel model = (DefaultTableModel)getOrderItemTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
        
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getIdItem();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getPrice();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField HasQuantity;
    private javax.swing.JScrollPane ItemTable;
    private javax.swing.JScrollPane ItemTable2;
    private javax.swing.JButton addCustomer;
    private javax.swing.JButton addEmploy;
    private javax.swing.JButton addFulfill;
    private javax.swing.JButton addHasInventory;
    private javax.swing.JButton addItem;
    private javax.swing.JButton addManage;
    private javax.swing.JButton addOrder;
    private javax.swing.JButton addPlaceOrder;
    private javax.swing.JButton addStaff;
    private javax.swing.JButton addStore;
    private javax.swing.JTextField address;
    private javax.swing.JTextField billAddr;
    private javax.swing.JLabel billing_Address;
    private javax.swing.JTextField customerOrders;
    private javax.swing.JTabbedPane customerPane;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton deleteCustomer;
    private javax.swing.JButton deleteEmploy;
    private javax.swing.JButton deleteFulfill;
    private javax.swing.JButton deleteHasInventory;
    private javax.swing.JButton deleteManage;
    private javax.swing.JButton deleteOrder;
    private javax.swing.JButton deletePlaceOrder;
    private javax.swing.JButton deleteStaff;
    private javax.swing.JButton deleteStaff1;
    private javax.swing.JButton deleteStore;
    private javax.swing.JTable employTable;
    private javax.swing.JTextField fName;
    private javax.swing.JLabel first_Name;
    private javax.swing.JTable fulfillTable;
    private javax.swing.JButton getCustomerOrders;
    private javax.swing.JTable getCustomerOrdersTable;
    private javax.swing.JButton getInventory;
    private javax.swing.JButton getManager;
    private javax.swing.JButton getOrderItem;
    private javax.swing.JTable getOrderItemTable;
    private javax.swing.JTable getOrderTable;
    private javax.swing.JButton getOrders;
    private javax.swing.JTextField getOrdersItem;
    private javax.swing.JButton getStaff;
    private javax.swing.JTextField getStoreInventoryStoreID;
    private javax.swing.JTable getStoreInventoryTable;
    private javax.swing.JTextField getStoreManagerID;
    private javax.swing.JTable getStoreManagerTable;
    private javax.swing.JTextField getStoreOrders;
    private javax.swing.JTextField getStoreStaffStoreID;
    private javax.swing.JTable getStoreStaffTable;
    private javax.swing.JTable hasInventoryTable;
    private javax.swing.JTextField idCustomer;
    private javax.swing.JLabel idCustomerLabel;
    private javax.swing.JTextField idEmpStaff;
    private javax.swing.JTextField idEmpStore;
    private javax.swing.JTextField idEmploy;
    private javax.swing.JTextField idFulOrder;
    private javax.swing.JTextField idFulStore;
    private javax.swing.JTextField idFulfill;
    private javax.swing.JTextField idHasInventory;
    private javax.swing.JTextField idHasItem;
    private javax.swing.JTextField idHasStore;
    private javax.swing.JTextField idItem;
    private javax.swing.JTextField idManStaff;
    private javax.swing.JTextField idManStore;
    private javax.swing.JTextField idManage;
    private javax.swing.JTextField idOrder;
    private javax.swing.JLabel idOrderLabel;
    private javax.swing.JTextField idPOCustomer;
    private javax.swing.JTextField idPOOrder;
    private javax.swing.JTextField idPlaceOrder;
    private javax.swing.JTextField idStaff;
    private javax.swing.JTextField idStore;
    private javax.swing.JTextField itemName;
    private javax.swing.JTextField itemPrice;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextField lName;
    private javax.swing.JLabel last_Name;
    private javax.swing.JTextField mName;
    private javax.swing.JTable manageTable;
    private javax.swing.JLabel middle_name;
    private javax.swing.JTextField name;
    private javax.swing.JTextField orderItem;
    private javax.swing.JTextField orderQuantity;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField orderTotal;
    private javax.swing.JTable placeOrderTable;
    private javax.swing.JButton populateCustomerList;
    private javax.swing.JButton populateEmployTable;
    private javax.swing.JButton populateFulfillTable;
    private javax.swing.JButton populateHasInventoryTable;
    private javax.swing.JButton populateItemList;
    private javax.swing.JButton populateManageTable;
    private javax.swing.JButton populateOrderTable;
    private javax.swing.JButton populatePlaceOrderTable;
    private javax.swing.JButton populateStaffList;
    private javax.swing.JButton populateStoreList;
    private javax.swing.JTabbedPane relationshipsPane;
    private javax.swing.JTextField shipAddr;
    private javax.swing.JLabel shipping_Address;
    private javax.swing.JTextField staffFName;
    private javax.swing.JTextField staffLName;
    private javax.swing.JTextField staffMName;
    private javax.swing.JTextField staffSSN;
    private javax.swing.JTable staffTable;
    private javax.swing.JTable storeTable;
    private javax.swing.JButton updateCustomer;
    private javax.swing.JButton updateEmploy;
    private javax.swing.JButton updateFulfill;
    private javax.swing.JButton updateHasInventory;
    private javax.swing.JButton updateItem;
    private javax.swing.JButton updateManage;
    private javax.swing.JButton updateOrder;
    private javax.swing.JButton updatePlaceOrder;
    private javax.swing.JButton updateStaff;
    private javax.swing.JButton updateStore;
    // End of variables declaration//GEN-END:variables
}
